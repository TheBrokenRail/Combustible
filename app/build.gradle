import io.github.classgraph.ClassGraph

buildscript {
    dependencies {
        classpath 'io.github.classgraph:classgraph:4.8.162'
    }
}

plugins {
    id 'com.android.application'
}

android {
    namespace 'com.thebrokenrail.combustible'
    compileSdk 33

    defaultConfig {
        applicationId 'com.thebrokenrail.combustible'
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        lintConfig = file("lint-config.xml")
    }
}

configurations.configureEach {
    exclude group: 'org.jetbrains', module: 'annotations-java5'
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    implementation 'com.github.MikeOrtiz:TouchImageView:3.4'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'com.caverock:androidsvg-aar:1.4'
    implementation project(':api')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Glide
    final def glide_version = '4.15.1'
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide_version}"
    implementation "com.github.bumptech.glide:annotations:${glide_version}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide_version}"

    // Markdown
    final def markwon_version = '4.6.2'
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"
    implementation "io.noties.markwon:syntax-highlight:$markwon_version"
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    def prism4j_version = "2.0.0"
    implementation "io.noties:prism4j:$prism4j_version"
    annotationProcessor "io.noties:prism4j-bundler:$prism4j_version"
}

afterEvaluate { project ->
    def compileTask = project.tasks.compileDebugJavaWithJavac
    compileTask.doLast {
        def packageToScan = "com.thebrokenrail"
        def classPackageRoot = compileTask.destinationDir
        new ClassGraph()
                .overrideClasspath(classPackageRoot)
                .acceptPackages(packageToScan)
                .enableAllInfo()
                .scan()
                .withCloseable { scanResult ->
                    scanResult.getAllClasses().generateGraphVizDotFile(new File(buildDir, "classgraph.dot"))
                }
    }
}